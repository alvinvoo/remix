{
	"id": "578cd06178570a26c519facd631569f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FunctionImport.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n// can alias/rename function\nimport {Unauthorized, helper as h1} from \"./CustomError.sol\";\n\nfunction helper(uint x) pure returns (uint) {\n}\n\ncontract Import {\n}"
			},
			"contracts/CustomError.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.7.0 <0.9.0;\n\n// custom error \n//  - extract outside the contract so can be imported and used in other contracts\n// this reduce gas fee required - much cheaper than sending a string\nerror Unauthorized(address caller);\n\n// exportable function\nfunction helper(uint x) pure returns (uint) {\n    return x * 2;\n}\n\ncontract VendingMachine {\n    address payable owner = payable(msg.sender);\n\n    function withdraw() public {\n        if (msg.sender != owner)\n            // 207402 gas\n            // revert(\"error\");\n            // cheaper - 200081 gas\n            revert Unauthorized(msg.sender);\n        \n        owner.transfer(address(this).balance);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/CustomError.sol": {
				"VendingMachine": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								}
							],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CustomError.sol\":365:709  contract VendingMachine {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CustomError.sol\":427:437  msg.sender */\n  caller\n    /* \"contracts/CustomError.sol\":395:438  address payable owner = payable(msg.sender) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/CustomError.sol\":365:709  contract VendingMachine {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CustomError.sol\":365:709  contract VendingMachine {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CustomError.sol\":445:707  function withdraw() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"contracts/CustomError.sol\":500:505  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CustomError.sol\":486:505  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CustomError.sol\":486:496  msg.sender */\n      caller\n        /* \"contracts/CustomError.sol\":486:505  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/CustomError.sol\":482:644  if (msg.sender != owner)... */\n      tag_7\n      jumpi\n        /* \"contracts/CustomError.sol\":633:643  msg.sender */\n      caller\n        /* \"contracts/CustomError.sol\":620:644  Unauthorized(msg.sender) */\n      mload(0x40)\n      0x8e4a23d600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/CustomError.sol\":482:644  if (msg.sender != owner)... */\n    tag_7:\n        /* \"contracts/CustomError.sol\":663:668  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CustomError.sol\":663:677  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/CustomError.sol\":663:700  owner.transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/CustomError.sol\":678:699  address(this).balance */\n      selfbalance\n        /* \"contracts/CustomError.sol\":663:700  owner.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_11:\n      pop\n        /* \"contracts/CustomError.sol\":445:707  function withdraw() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_13:\n        /* \"#utility.yul\":94:118   */\n      tag_15\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_9:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_18\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:455   */\n    tag_16:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:449   */\n      tag_20\n        /* \"#utility.yul\":443:448   */\n      dup3\n        /* \"#utility.yul\":425:449   */\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":414:449   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:455   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":461:587   */\n    tag_21:\n        /* \"#utility.yul\":498:505   */\n      0x00\n        /* \"#utility.yul\":538:580   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":531:536   */\n      dup3\n        /* \"#utility.yul\":527:581   */\n      and\n        /* \"#utility.yul\":516:581   */\n      swap1\n      pop\n        /* \"#utility.yul\":461:587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e65ac74e6e3164d5ba2c09883d87832fb89e40e50cd570a92b43286f4c028b8364736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b506101c5806100606000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ccfd60b14610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ca57336040517f8e4a23d60000000000000000000000000000000000000000000000000000000081526004016100c19190610142565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610130573d6000803e3d6000fd5b50565b61013c8161015d565b82525050565b60006020820190506101576000830184610133565b92915050565b60006101688261016f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea2646970667358221220e65ac74e6e3164d5ba2c09883d87832fb89e40e50cd570a92b43286f4c028b8364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C5 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x8E4A23D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x130 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x13C DUP2 PUSH2 0x15D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP3 PUSH2 0x16F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 GAS 0xC7 0x4E PUSH15 0x3164D5BA2C09883D87832FB89E40E5 0xC 0xD5 PUSH17 0xA92B43286F4C028B8364736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "365:344:0:-:0;;;427:10;395:43;;;;;;;;;;;;;;;;;;;;365:344;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@withdraw_48": {
									"entryPoint": 58,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:2",
														"type": ""
													}
												],
												"src": "7:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:2",
														"type": ""
													}
												],
												"src": "131:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "443:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "425:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "425:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:2",
														"type": ""
													}
												],
												"src": "359:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "516:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "531:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "538:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "527:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "527:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "516:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "498:7:2",
														"type": ""
													}
												],
												"src": "461:126:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ccfd60b14610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100ca57336040517f8e4a23d60000000000000000000000000000000000000000000000000000000081526004016100c19190610142565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610130573d6000803e3d6000fd5b50565b61013c8161015d565b82525050565b60006020820190506101576000830184610133565b92915050565b60006101688261016f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff8216905091905056fea2646970667358221220e65ac74e6e3164d5ba2c09883d87832fb89e40e50cd570a92b43286f4c028b8364736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCA JUMPI CALLER PUSH1 0x40 MLOAD PUSH32 0x8E4A23D600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x130 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x13C DUP2 PUSH2 0x15D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x157 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x168 DUP3 PUSH2 0x16F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 GAS 0xC7 0x4E PUSH15 0x3164D5BA2C09883D87832FB89E40E5 0xC 0xD5 PUSH17 0xA92B43286F4C028B8364736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "365:344:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:262;;;:::i;:::-;;;500:5;;;;;;;;;;486:19;;:10;:19;;;482:162;;633:10;620:24;;;;;;;;;;;:::i;:::-;;;;;;;;482:162;663:5;;;;;;;;;;:14;;:37;678:21;663:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;445:262::o;7:118:2:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:96::-;396:7;425:24;443:5;425:24;:::i;:::-;414:35;;359:96;;;:::o;461:126::-;498:7;538:42;531:5;527:54;516:65;;461:126;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "90600",
								"executionCost": "24407",
								"totalCost": "115007"
							},
							"external": {
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 365,
									"end": 709,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 365,
									"end": 709,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 365,
									"end": 709,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 427,
									"end": 437,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 395,
									"end": 438,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 395,
									"end": 438,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 395,
									"end": 438,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 395,
									"end": 438,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 395,
									"end": 438,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 709,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 365,
									"end": 709,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 709,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 365,
									"end": 709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 709,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 365,
									"end": 709,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 365,
									"end": 709,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e65ac74e6e3164d5ba2c09883d87832fb89e40e50cd570a92b43286f4c028b8364736f6c63430008070033",
									".code": [
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 365,
											"end": 709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 445,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 445,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 445,
											"end": 707,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 445,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 445,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 445,
											"end": 707,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 707,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 445,
											"end": 707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 500,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 500,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 496,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 486,
											"end": 505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 486,
											"end": 505,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 482,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 482,
											"end": 644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 633,
											"end": 643,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "8E4A23D600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 620,
											"end": 644,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 482,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 482,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 663,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 663,
											"end": 668,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 663,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 668,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 663,
											"end": 668,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 663,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 663,
											"end": 677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 678,
											"end": 699,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 663,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 663,
											"end": 700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 445,
											"end": 707,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 455,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 359,
											"end": 455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 443,
											"end": 448,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 425,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 414,
											"end": 449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 414,
											"end": 449,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 359,
											"end": 455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 359,
											"end": 455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 359,
											"end": 455,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 461,
											"end": 587,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 461,
											"end": 587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 498,
											"end": 505,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 580,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 527,
											"end": 581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 516,
											"end": 581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 516,
											"end": 581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 461,
											"end": 587,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 461,
											"end": 587,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 461,
											"end": 587,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 461,
											"end": 587,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CustomError.sol\":\"VendingMachine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CustomError.sol\":{\"keccak256\":\"0xce603e00ff469c13dca609514e10f347c3f6710b35e90837859b813e55d5162a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://890b2a540d96edb48bd25687f1a19ae167bed242766c083da4748e7f449ca4a9\",\"dweb:/ipfs/QmPA9jJtDSDtSwtPPhNr7pTjDPEcHoEdV2zPXUYxF3zkmZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/CustomError.sol:VendingMachine",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/FunctionImport.sol": {
				"Import": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FunctionImport.sol\":211:230  contract Import {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FunctionImport.sol\":211:230  contract Import {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206126184734d302aefe91a5f3f0b75ef5ae3160b3b20223eb619389f24fcec5fe64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212206126184734d302aefe91a5f3f0b75ef5ae3160b3b20223eb619389f24fcec5fe64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x2618 SELFBALANCE CALLVALUE 0xD3 MUL 0xAE INVALID SWAP2 0xA5 RETURN CREATE 0xB7 0x5E CREATE2 0xAE BALANCE PUSH1 0xB3 0xB2 MUL 0x23 0xEB PUSH2 0x9389 CALLCODE 0x4F 0xCE 0xC5 INVALID PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "211:19:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212206126184734d302aefe91a5f3f0b75ef5ae3160b3b20223eb619389f24fcec5fe64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x2618 SELFBALANCE CALLVALUE 0xD3 MUL 0xAE INVALID SWAP2 0xA5 RETURN CREATE 0xB7 0x5E CREATE2 0xAE BALANCE PUSH1 0xB3 0xB2 MUL 0x23 0xEB PUSH2 0x9389 CALLCODE 0x4F 0xCE 0xC5 INVALID PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "211:19:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 211,
									"end": 230,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 211,
									"end": 230,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 211,
									"end": 230,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 230,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 230,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 211,
									"end": 230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 230,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 211,
									"end": 230,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 230,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 211,
									"end": 230,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 211,
									"end": 230,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206126184734d302aefe91a5f3f0b75ef5ae3160b3b20223eb619389f24fcec5fe64736f6c63430008070033",
									".code": [
										{
											"begin": 211,
											"end": 230,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 211,
											"end": 230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 211,
											"end": 230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 230,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FunctionImport.sol\":\"Import\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CustomError.sol\":{\"keccak256\":\"0xce603e00ff469c13dca609514e10f347c3f6710b35e90837859b813e55d5162a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://890b2a540d96edb48bd25687f1a19ae167bed242766c083da4748e7f449ca4a9\",\"dweb:/ipfs/QmPA9jJtDSDtSwtPPhNr7pTjDPEcHoEdV2zPXUYxF3zkmZ\"]},\"contracts/FunctionImport.sol\":{\"keccak256\":\"0xd52896dc6ed6837992827e6a744000461c56fcf9f1f10775624704f670b35108\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f89d97460629857cae73e9eb837f9f786cba9844b9e310f8cc6b23e8b5442057\",\"dweb:/ipfs/QmVk8RjPsEWUVN4x6kRJcLkDReP6iy9qqsNras2PeKwSu9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/CustomError.sol": {
				"ast": {
					"absolutePath": "contracts/CustomError.sol",
					"exportedSymbols": {
						"Unauthorized": [
							5
						],
						"VendingMachine": [
							49
						],
						"helper": [
							17
						]
					},
					"id": 50,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:0"
						},
						{
							"id": 5,
							"name": "Unauthorized",
							"nameLocation": "244:12:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 4,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 3,
										"mutability": "mutable",
										"name": "caller",
										"nameLocation": "265:6:0",
										"nodeType": "VariableDeclaration",
										"scope": 5,
										"src": "257:14:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "257:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "256:16:0"
							},
							"src": "238:35:0"
						},
						{
							"body": {
								"id": 16,
								"nodeType": "Block",
								"src": "342:21:0",
								"statements": [
									{
										"expression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 14,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 12,
												"name": "x",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 7,
												"src": "355:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "32",
												"id": 13,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "359:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"src": "355:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"functionReturnParameters": 11,
										"id": 15,
										"nodeType": "Return",
										"src": "348:12:0"
									}
								]
							},
							"id": 17,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "helper",
							"nameLocation": "307:6:0",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 8,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 7,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "319:1:0",
										"nodeType": "VariableDeclaration",
										"scope": 17,
										"src": "314:6:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 6,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "314:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "313:8:0"
							},
							"returnParameters": {
								"id": 11,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 10,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 17,
										"src": "336:4:0",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 9,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "336:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "335:6:0"
							},
							"scope": 50,
							"src": "298:65:0",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 49,
							"linearizedBaseContracts": [
								49
							],
							"name": "VendingMachine",
							"nameLocation": "374:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "411:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 49,
									"src": "395:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 18,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "395:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"expression": {
													"id": 21,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "427:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 22,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "427:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 20,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "419:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 19,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "419:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "419:19:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "472:235:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 27,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "486:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "486:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 29,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "500:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "486:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 36,
												"nodeType": "IfStatement",
												"src": "482:162:0",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 32,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "633:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "633:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 31,
															"name": "Unauthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "620:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																"typeString": "function (address) pure"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "620:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 35,
													"nodeType": "RevertStatement",
													"src": "613:31:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 42,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "686:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_VendingMachine_$49",
																			"typeString": "contract VendingMachine"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_VendingMachine_$49",
																			"typeString": "contract VendingMachine"
																		}
																	],
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "678:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 40,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "678:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "678:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "678:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 37,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "663:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "663:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "663:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "663:37:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "454:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "462:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:0"
									},
									"scope": 49,
									"src": "445:262:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 50,
							"src": "365:344:0",
							"usedErrors": [
								5
							]
						}
					],
					"src": "37:672:0"
				},
				"id": 0
			},
			"contracts/FunctionImport.sol": {
				"ast": {
					"absolutePath": "contracts/FunctionImport.sol",
					"exportedSymbols": {
						"Import": [
							63
						],
						"Unauthorized": [
							5
						],
						"h1": [
							17
						],
						"helper": [
							62
						]
					},
					"id": 64,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 51,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "37:31:1"
						},
						{
							"absolutePath": "contracts/CustomError.sol",
							"file": "./CustomError.sol",
							"id": 54,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 64,
							"sourceUnit": 50,
							"src": "99:61:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 52,
										"name": "Unauthorized",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "107:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 53,
										"name": "helper",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "121:6:1",
										"typeDescriptions": {}
									},
									"local": "h1",
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"body": {
								"id": 61,
								"nodeType": "Block",
								"src": "206:3:1",
								"statements": []
							},
							"id": 62,
							"implemented": true,
							"kind": "freeFunction",
							"modifiers": [],
							"name": "helper",
							"nameLocation": "171:6:1",
							"nodeType": "FunctionDefinition",
							"parameters": {
								"id": 57,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 56,
										"mutability": "mutable",
										"name": "x",
										"nameLocation": "183:1:1",
										"nodeType": "VariableDeclaration",
										"scope": 62,
										"src": "178:6:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 55,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "178:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "177:8:1"
							},
							"returnParameters": {
								"id": 60,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 59,
										"mutability": "mutable",
										"name": "",
										"nameLocation": "-1:-1:-1",
										"nodeType": "VariableDeclaration",
										"scope": 62,
										"src": "200:4:1",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"typeName": {
											"id": 58,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "200:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "199:6:1"
							},
							"scope": 64,
							"src": "162:47:1",
							"stateMutability": "pure",
							"virtual": false,
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63
							],
							"name": "Import",
							"nameLocation": "220:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 64,
							"src": "211:19:1",
							"usedErrors": []
						}
					],
					"src": "37:193:1"
				},
				"id": 1
			}
		}
	}
}